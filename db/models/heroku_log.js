{ options: 
   { dialect: 'postgres',
     dialectModulePath: null,
     host: 'ec2-54-243-44-191.compute-1.amazonaws.com',
     protocol: 'postgres',
     define: {},
     query: {},
     sync: {},
     timezone: '+00:00',
     logging: [Function],
     omitNull: false,
     native: false,
     replication: false,
     ssl: undefined,
     pool: {},
     quoteIdentifiers: true,
     hooks: {},
     port: '5432' },
  config: 
   { database: 'd7v0htmpq36aim',
     username: 'mpwgblcimtalqt',
     password: 'J4cMctMLnqe09TgT4b3N-BNOE3',
     host: 'ec2-54-243-44-191.compute-1.amazonaws.com',
     port: '5432',
     pool: 
      { max: 5,
        min: 0,
        idle: 10000,
        handleDisconnects: true,
        validate: [Function] },
     protocol: 'postgres',
     queue: undefined,
     native: false,
     ssl: undefined,
     replication: false,
     dialectModulePath: null,
     maxConcurrentQueries: undefined,
     keepDefaultTimezone: undefined,
     dialectOptions: undefined,
     user: 'mpwgblcimtalqt' },
  dialect: 
   { sequelize: [Circular],
     connectionManager: 
      { sequelize: [Circular],
        config: [Object],
        dialect: [Circular],
        onProcessExit: [Function],
        lib: [Object],
        pool: [Object] } },
  models: {},
  daoFactoryManager: { daos: [], sequelize: [Circular] },
  modelManager: { daos: [], sequelize: [Circular] },
  connectionManager: 
   { sequelize: [Circular],
     config: 
      { database: 'd7v0htmpq36aim',
        username: 'mpwgblcimtalqt',
        password: 'J4cMctMLnqe09TgT4b3N-BNOE3',
        host: 'ec2-54-243-44-191.compute-1.amazonaws.com',
        port: '5432',
        pool: [Object],
        protocol: 'postgres',
        queue: undefined,
        native: false,
        ssl: undefined,
        replication: false,
        dialectModulePath: null,
        maxConcurrentQueries: undefined,
        keepDefaultTimezone: undefined,
        dialectOptions: undefined,
        user: 'mpwgblcimtalqt' },
     dialect: { sequelize: [Circular], connectionManager: [Circular] },
     onProcessExit: [Function],
     lib: 
      { domain: null,
        _events: {},
        _maxListeners: 10,
        defaults: [Object],
        Client: [Object],
        Query: [Object],
        pools: [Object],
        Connection: [Object],
        types: [Object],
        native: [Getter] },
     pool: 
      { destroy: [Function],
        acquire: [Function],
        borrow: [Function],
        release: [Function],
        returnToPool: [Function],
        drain: [Function],
        destroyAllNow: [Function],
        pooled: [Function],
        getPoolSize: [Function],
        getName: [Function],
        availableObjectsCount: [Function],
        waitingClientsCount: [Function] } },
  importCache: {} }
Executing (default): SELECT 1+1 AS result
Connection has been established successfully.